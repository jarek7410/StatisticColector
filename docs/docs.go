// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get status",
                "produces": [
                    "application/json"
                ],
                "summary": "Get status about server helth",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HalfCheckDto"
                        }
                    }
                }
            }
        },
        "/v1/name/": {
            "get": {
                "description": "get existing names in service",
                "produces": [
                    "application/json"
                ],
                "summary": "get existing names",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": " ",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": " ",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Name"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/name/{id}": {
            "get": {
                "description": "get existing stats by name id",
                "produces": [
                    "application/json"
                ],
                "summary": "get existing stats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of name of stats which you want",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": " ",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": " ",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetStatsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/stat": {
            "post": {
                "description": "crate new stat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create new stat",
                "parameters": [
                    {
                        "description": "new stat",
                        "name": "stat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostStatDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Stat"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.GetStatsDto": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameID": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "stats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.StatDto"
                    }
                }
            }
        },
        "dto.HalfCheckDto": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.PostStatDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "nameID": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "dto.StatDto": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.Name": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Stat"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Stat": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "nameID": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:2137",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Statistic Collector",
	Description:      "This is a simple serwer to collect statistics and serv them back.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
